import{_ as n,c as a,b as l,o}from"./chunks/framework.B1z0IdBH.js";const d=JSON.parse('{"title":"codecompanion.nvim","description":"","frontmatter":{},"headers":[{"level":2,"title":"特性","slug":"特性","link":"#特性","children":[]},{"level":2,"title":"安装","slug":"安装","link":"#安装","children":[{"level":3,"title":"通过 lazy.nvim 安装","slug":"通过-lazy-nvim-安装","link":"#通过-lazy-nvim-安装","children":[]},{"level":3,"title":"通过 mini.deps 安装","slug":"通过-mini-deps-安装","link":"#通过-mini-deps-安装","children":[]},{"level":3,"title":"其他安装方法","slug":"其他安装方法","link":"#其他安装方法","children":[]}]},{"level":2,"title":"使用","slug":"使用","link":"#使用","children":[]}],"relativePath":"guide/codecompanion.nvim/README_cn.md","filePath":"guide/codecompanion.nvim/README_cn.md"}'),p={name:"guide/codecompanion.nvim/README_cn.md"};function e(t,s,c,r,E,i){return o(),a("div",null,s[0]||(s[0]=[l(`<h1 id="codecompanion-nvim" tabindex="-1"><a href="https://github.com/olimorris/codecompanion.nvim" target="_blank" rel="noreferrer">codecompanion.nvim</a> <a class="header-anchor" href="#codecompanion-nvim" aria-label="Permalink to &quot;[codecompanion.nvim](https://github.com/olimorris/codecompanion.nvim)&quot;">​</a></h1><blockquote><p>AI 驱动的编码，在 Neovim 中无缝集成</p></blockquote><p><strong>codecompanion.nvim</strong> 是一个提高生产力的工具，它简化了在 Neovim 中使用大型语言模型（LLM）进行开发的方式。</p><h2 id="特性" tabindex="-1">特性 <a class="header-anchor" href="#特性" aria-label="Permalink to &quot;特性&quot;">​</a></h2><ul><li>💬 在 Neovim 中，<a href="https://github.com/features/copilot" target="_blank" rel="noreferrer">Copilot Chat</a> 与 <a href="https://zed.dev/blog/zed-ai" target="_blank" rel="noreferrer">Zed AI</a> 的结合</li><li>🔌 支持 Anthropic、Copilot、Gemini、Ollama、OpenAI、Azure OpenAI、HuggingFace 和 xAI LLM（或自定义 LLM！）</li><li>🚀 内联变换、代码生成与重构</li><li>🤖 通过变量、斜杠命令、代理/工具和工作流改善 LLM 输出</li><li>✨ 内置常用任务的提示词，例如 LSP 错误的建议和代码解释</li><li>🏗️ 创建自定义提示、变量和斜杠命令</li><li>📚 同时打开多个对话</li><li>💪 异步执行，提供快速的性能</li></ul><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><p>首先，导航到 Neovim 配置文件夹（默认情况下，Linux 上的路径是 <code>~/.config/nvim</code>）。</p><h3 id="通过-lazy-nvim-安装" tabindex="-1">通过 <code>lazy.nvim</code> 安装 <a class="header-anchor" href="#通过-lazy-nvim-安装" aria-label="Permalink to &quot;通过 \`lazy.nvim\` 安装&quot;">​</a></h3><p>然后进入 <code>lua/plugins</code> 文件夹。创建一个名为 <code>init.lua</code> 的文件，并添加以下内容：</p><div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#9ECBFF;">  &quot;olimorris/codecompanion.nvim&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  dependencies </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#9ECBFF;">    &quot;nvim-lua/plenary.nvim&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#9ECBFF;">    &quot;nvim-treesitter/nvim-treesitter&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#B392F0;">  config</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> function</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#79B8FF;">    require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;codecompanion&quot;</span><span style="color:#E1E4E8;">).</span><span style="color:#79B8FF;">setup</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">      adapters </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#B392F0;">        deepseek</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> function</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#F97583;">          return</span><span style="color:#79B8FF;"> require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;codecompanion.adapters&quot;</span><span style="color:#E1E4E8;">).</span><span style="color:#79B8FF;">extend</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;deepseek&quot;</span><span style="color:#E1E4E8;">, {</span></span>
<span class="line"><span style="color:#E1E4E8;">            env </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">              api_key </span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;"> &quot;YOUR_API_KEY&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            },</span></span>
<span class="line"><span style="color:#E1E4E8;">          })</span></span>
<span class="line"><span style="color:#F97583;">        end</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      },</span></span>
<span class="line"><span style="color:#E1E4E8;">      strategies </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        chat </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> { adapter </span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;"> &quot;deepseek&quot;</span><span style="color:#E1E4E8;">, },</span></span>
<span class="line"><span style="color:#E1E4E8;">        inline </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> { adapter </span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;"> &quot;deepseek&quot; </span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">        agent </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> { adapter </span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;"> &quot;deepseek&quot; </span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">      },</span></span>
<span class="line"><span style="color:#E1E4E8;">    })</span></span>
<span class="line"><span style="color:#F97583;">  end</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre></div><p>重新启动 Neovim，<code>lazy.nvim</code> 应该会自动下载并安装 <code>codecompanion.nvim</code> 插件及其依赖项。</p><h3 id="通过-mini-deps-安装" tabindex="-1">通过 <code>mini.deps</code> 安装 <a class="header-anchor" href="#通过-mini-deps-安装" aria-label="Permalink to &quot;通过 \`mini.deps\` 安装&quot;">​</a></h3><p>将以下内容添加到你的 <code>init.lua</code> 中</p><div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> add, later </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> MiniDeps.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">, MiniDeps.</span><span style="color:#B392F0;">later</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">later</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#79B8FF;">  add</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">    source </span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;"> &quot;olimorris/codecompanion.nvim&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    depends </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#9ECBFF;">      &quot;nvim-lua/plenary.nvim&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#9ECBFF;">      &quot;nvim-treesitter/nvim-treesitter&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">  })</span></span>
<span class="line"><span style="color:#79B8FF;">  require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;codecompanion&quot;</span><span style="color:#E1E4E8;">).</span><span style="color:#79B8FF;">setup</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">    adapters </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#B392F0;">      deepseek</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> function</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#F97583;">        return</span><span style="color:#79B8FF;"> require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;codecompanion.adapters&quot;</span><span style="color:#E1E4E8;">).</span><span style="color:#79B8FF;">extend</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;deepseek&quot;</span><span style="color:#E1E4E8;">, {</span></span>
<span class="line"><span style="color:#E1E4E8;">          env </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">              api_key </span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;"> &quot;YOUR_API_KEY&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">          },</span></span>
<span class="line"><span style="color:#E1E4E8;">        })</span></span>
<span class="line"><span style="color:#F97583;">      end</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    strategies </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      chat </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> { adapter </span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;"> &quot;deepseek&quot;</span><span style="color:#E1E4E8;">, },</span></span>
<span class="line"><span style="color:#E1E4E8;">      inline </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> { adapter </span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;"> &quot;deepseek&quot; </span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">      agent </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> { adapter </span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;"> &quot;deepseek&quot; </span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">  })</span></span>
<span class="line"><span style="color:#F97583;">end</span><span style="color:#E1E4E8;">)</span></span></code></pre></div><p>重新启动 Neovim，<code>mini.deps</code> 应该会自动下载并安装 <code>codecompanion.nvim</code> 插件。</p><h3 id="其他安装方法" tabindex="-1">其他安装方法 <a class="header-anchor" href="#其他安装方法" aria-label="Permalink to &quot;其他安装方法&quot;">​</a></h3><p><a href="https://codecompanion.olimorris.dev/installation.html" target="_blank" rel="noreferrer">https://codecompanion.olimorris.dev/installation.html</a></p><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h2><p><a href="https://codecompanion.olimorris.dev/usage/introduction.html" target="_blank" rel="noreferrer">https://codecompanion.olimorris.dev/usage/introduction.html</a></p>`,19)]))}const u=n(p,[["render",e]]);export{d as __pageData,u as default};
